/**
 * @project LABYRINTH2015
 * ICP project
 * @class SaveDialogue
 * @author xsusov01
 * @email  xsusov01@stud.fit.vutbr.cz
 * @author xbandz00
 * @email  xbandz00@stud.fit.vutbr.cz
 * @file savedialogue.cpp
 * @date 2015/05/10
 * @brief save menu widget
*/
#include "widget.h"
#include "savedialogue.h"
#include "ui_savedialogue.h"


/**
 * @brief SaveDialogue::SaveDialogue constructor (generated by Qt)
 * @param parent - parent widget
 */
SaveDialogue::SaveDialogue(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::SaveDialogue)
{
    ui->setupUi(this);
}

/**
 * @brief SaveDialogue::SaveDialogue constructor with pointer to parent
 * @param parent - parent widget
 * @param ptr - pointer to game class
 */
SaveDialogue::SaveDialogue(QWidget *parent, Game *ptr) :
    QDialog(parent),
    ui(new Ui::SaveDialogue)
{
    ui->setupUi(this);
    this->game_ptr = ptr;
}

/**
 * @brief SaveDialogue::~SaveDialogue destructor
 */
SaveDialogue::~SaveDialogue()
{
    delete ui;
}

/**
 * @brief SaveDialogue::on_lineEdit_textChanged disables button on empty input line
 * @param arg1 - QString from input line.
 */
void SaveDialogue::on_lineEdit_textChanged(const QString &arg1)
{
    if (arg1.isEmpty())
        this->ui->save_button->setDisabled(true);
    else
        this->ui->save_button->setEnabled(true);
}

/**
 * @brief SaveDialogue::on_close_button_clicked returns back to game and deletes itself
 */
void SaveDialogue::on_close_button_clicked()
{
    ((Widget*)parentWidget())->enable_button("save");
    this->hide();
    delete this;
}

/**
 * @brief SaveDialogue::on_save_button_clicked saves game
 */
void SaveDialogue::on_save_button_clicked()
{
    if (this->game_ptr->saveGame(this->ui->lineEdit->displayText().toStdString()))
    {
        this->ui->message->setText("Game saved.");
    }
    else this->ui->message->setText("An error, retry.");
}
